<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd">

	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource"
		destroy-method="close">
		<property name="driverClass" value="${jdbc.driverClassName}" />
		<property name="jdbcUrl"
			value="jdbc:mysql://${jdbc.meeting.url}/yifadb?useUnicode=true&amp;characterEncoding=utf-8" />
		<property name="user" value="${jdbc.meeting.username}" />
		<property name="password" value="${jdbc.meeting.password}" />
		<property name="maxPoolSize" value="50" />
		<property name="maxIdleTime" value="300" />
		<property name="checkoutTimeout" value="2000" />
	</bean>

	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate3.LocalSessionFactoryBean"
		lazy-init="true">
		<property name="dataSource" ref="dataSource" />
		<property name="mappingLocations">
			<list>
				<value>classpath:com/wondertek/meeting/model/conf/AdminUser.hbm.xml</value>
				<value>classpath:com/guo/yf/model/conf/security/*.hbm.xml</value>
			</list>
		</property>
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>
				<prop key="hibernate.query.substitutions">true 'Y', false 'N'</prop>
				<prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
				<prop key="hibernate.format_sql">false</prop>
				<prop key="hibernate.cache.use_second_level_cache">true</prop>
				<prop key="hibernate.jdbc.fetch_size">50</prop>
				<prop key="hibernate.jdbc.batch_size">25</prop>
				<prop key="hibernate.connection.release_mode">after_transaction</prop>
				<prop key="hibernate.cache.provider_class">
					net.sf.ehcache.hibernate.SingletonEhCacheProvider
				</prop>
				<prop key="hibernate.cache.use_query_cache">true</prop>
			</props>
		</property>
		<property name="lobHandler" ref="oracleLobHandle" />
	</bean>

	<bean id="nativeJdbcExtractor"
		class="org.springframework.jdbc.support.nativejdbc.SimpleNativeJdbcExtractor" />

	<bean id="oracleLobHandle" class="org.springframework.jdbc.support.lob.OracleLobHandler">
		<property name="nativeJdbcExtractor" ref="nativeJdbcExtractor" />
	</bean>

	<bean id="transactionManager"
		class="org.springframework.orm.hibernate3.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>

	<!-- Add new DAOs here -->
	<bean id="baseDao" abstract="true"
		class="com.wondertek.meeting.dao.impl.BaseDaoImpl">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>


	<bean id="adminUserDao" class="com.wondertek.meeting.dao.impl.AdminUserDaoImpl"
		parent="baseDao">
	</bean>

	<bean id="adminRoleDao" class="com.wondertek.meeting.dao.impl.AdminRoleDaoImpl"
		parent="baseDao">
	</bean>
	
	
	<bean id="userRoleDao" class="com.wondertek.meeting.dao.impl.UserRoleDaoImpl"
		parent="baseDao">
	</bean>

	<bean id="userLoginLogDao" class="com.wondertek.meeting.dao.impl.UserLoginLogDaoImpl"
		parent="baseDao">
	</bean>
	
		<bean id="securityRoleDao" class="com.guo.yf.dao.impl.SecurityRoleDaoImpl" parent="baseDao" />
		<bean id="securityUnitDao" class="com.guo.yf.dao.impl.SecurityUnitDaoImpl" parent="baseDao" />
		<bean id="securityRoleUnitDao" class="com.guo.yf.dao.impl.SecurityRoleUnitDaoImpl" parent="baseDao" />
		
		
	
</beans>